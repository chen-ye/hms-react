{"filter":false,"title":"UserCard.jsx","tooltip":"/hms/components/widgets/user/UserCard.jsx","undoManager":{"mark":6,"position":6,"stack":[[{"start":{"row":0,"column":0},"end":{"row":26,"column":0},"action":"remove","lines":["// Task component - represents a single todo item","UserCard = React.createClass({","    propTypes: {","        // This component gets the task to display through a React prop.","        // We can use propTypes to indicate it is required","        user: React.PropTypes.object.isRequired","    },","    render() {","        //console.log(this.props.user);","        return (","      <div className=\"ui card\">","        <div className=\"content\">","          <div className=\"header\">{this.props.user.profile.name}</div>","          <div className=\"meta\">","            <span className=\"date\">{this.props.user.roles.map((role) => {","                return <span key={role}>{role}</span>;","              })}</span>","          </div>","          <div className=\"description\">","","          </div>","        </div>","    </div>","    );","    }","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["// Task component - represents a single todo item","UserCard = React.createClass({","    propTypes: {","        // This component gets the task to display through a React prop.","        // We can use propTypes to indicate it is required","        user: React.PropTypes.object.isRequired","    },","    render() {","        //console.log(this.props.user);","        return (","      <div className=\"ui card\">","        <div className=\"content\">","          <div className=\"header\">{this.props.user.profile.name}</div>","          <div className=\"meta\">","            <span className=\"type\">{this.props.user.roles.map((role) => {","                return <span key={role}>{role}</span>;","              })}</span>","          </div>","          <div className=\"description\">","","          </div>","        </div>","        <div className=\"extra content\">","          <div className=\"right floated status\">","            <HackerStatus hackerStatus={this.props.user.hackerStatus}/>","          </div>","        </div>","    </div>","    );","    }","});",""]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":49},"action":"remove","lines":["// Task component - represents a single todo item"],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":14},"action":"insert","lines":["/* global React */","/* global _ */"],"id":6}],[{"start":{"row":0,"column":18},"end":{"row":1,"column":14},"action":"remove","lines":["","/* global _ */"],"id":7},{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["\\"]}],[{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"remove","lines":["\\"],"id":8}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":18},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1447526126597,"hash":"7123104d987a229099a938606d8729ceb0c80269"}